{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Sebastian\\\\Desktop\\\\frontend-nextjs\\\\src\\\\components\\\\forms\\\\usuario\\\\RegistrarUsuario.jsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport Link from 'next/link';\nimport Image from 'next/image';\nimport { useRouter } from 'next/router';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport { GoogleLogin } from 'react-google-login';\nimport { Button, TextInput } from 'react-materialize';\nimport { useToasts } from 'react-toast-notifications';\nimport Services from '@services/serviciosRegistro';\nimport { PasswordField } from '@components/commons/inputs/password/PasswordField';\nimport stylesGoogle from '@styles/modules/stylesGoogle.module.css';\n\nvar RegistrarUsuario = function RegistrarUsuario() {\n  _s();\n\n  var boton = stylesGoogle.boton,\n      imagenGoogle = stylesGoogle.imagenGoogle;\n\n  var _useToasts = useToasts(),\n      addToast = _useToasts.addToast;\n\n  var router = useRouter();\n  var registerSchema = Yup.object().shape({\n    nombres: Yup.string().trim().max(60, 'Máximo 60 caracteres').required('Este campo es obligatorio'),\n    apellidos: Yup.string().trim().max(60, 'Máximo 60 caracteres').required('Este campo es obligatorio'),\n    correo: Yup.string().trim().required('Este campo es obligatorio').email('Correo electronico invalido').min(5, 'Mínimo 5 caracteres'),\n    clave: Yup.string().required('Este campo es obligatorio').matches('^(?=\\\\w*\\\\d)(?=\\\\w*[A-Z])(?=\\\\w*[a-z])\\\\S{8,20}$', 'La clave debe tener al entre 8 y 20 caracteres, un dígito, una letra minúscula y una letra mayúscula.')\n  });\n\n  var registerNewUser = function registerNewUser(values) {\n    Services.newUser(values, function (_ref) {\n      var data = _ref.data;\n      addToast('¡Usuario registrado con exito!', {\n        appearance: 'success'\n      });\n      router.push(\"notificacion/activar-cuenta\");\n    }, function (error) {\n      if (error.response) {\n        var status = error.response.status;\n\n        if (status === 409) {\n          addToast('Cuenta actualmente existente', {\n            appearance: 'info'\n          });\n        } else if (status === 422) {\n          addToast('Valida la información, por favor', {\n            appearance: 'warning'\n          });\n        } else if (status === 500) {\n          addToast('oh no :(, no eres tú somos nosotros, algo a ido mal', {\n            appearance: 'error'\n          });\n        }\n      } else {\n        addToast('oh no :(, no eres tú somos nosotros, algo a ido mal', {\n          appearance: 'error'\n        });\n      }\n    });\n  };\n\n  var formik = useFormik({\n    initialValues: {\n      nombres: '',\n      apellidos: '',\n      correo: '',\n      clave: ''\n    },\n    validationSchema: registerSchema,\n    onSubmit: registerNewUser\n  });\n  /**\r\n   * Sing up with google\r\n   */\n\n  var respuestaGoogle = function respuestaGoogle(response) {\n    console.log(response.profileObj);\n\n    if (response.profileObj) {\n      var googleUser = {\n        nombres: response.profileObj.givenName,\n        apellidos: response.profileObj.familyName,\n        correo: response.profileObj.email,\n        googleId: response.profileObj.googleId\n      };\n      Services.newGoogleUser(googleUser, function () {\n        addToast('¡Usuario registrado y verificado con exito!', {\n          appearance: 'success',\n          autoDismiss: true\n        });\n        history.push(\"login\");\n      }, function (error) {\n        if (error.response) {\n          var status = error.response.status;\n\n          if (status === 409) {\n            addToast('Cuenta actualmente existente', {\n              appearance: 'info'\n            });\n          } else if (status === 422) {\n            addToast('Valida la información, por favor', {\n              appearance: 'warning'\n            });\n          } else if (status === 500) {\n            addToast('oh no :(, no eres tú somos nosotros, algo a ido mal', {\n              appearance: 'error'\n            });\n          }\n        } else {\n          addToast('oh no :(, no eres tú somos nosotros, algo a ido mal', {\n            appearance: 'error'\n          });\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    className: \"form-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Crear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 36\n      }, _this), \" una cuenta.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TextInput, _objectSpread(_objectSpread({\n      label: \"Nombres:\",\n      name: \"nombres\",\n      id: \"nombres\"\n    }, formik.getFieldProps('nombres')), {}, {\n      children: formik.touched.nombres && formik.errors.nombres ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"helper-text red-text\",\n        children: formik.errors.nombres\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 78\n      }, _this) : null\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TextInput, _objectSpread(_objectSpread({\n      label: \"Apellidos:\",\n      name: \"apellidos\",\n      id: \"apellidos\"\n    }, formik.getFieldProps('apellidos')), {}, {\n      children: formik.touched.apellidos && formik.errors.apellidos ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"helper-text red-text\",\n        children: formik.errors.apellidos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 82\n      }, _this) : null\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(TextInput, _objectSpread(_objectSpread({\n      label: \"Correo:\",\n      email: true,\n      name: \"correo\",\n      id: \"correo\"\n    }, formik.getFieldProps('correo')), {}, {\n      children: formik.touched.correo && formik.errors.correo ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"helper-text red-text\",\n        children: formik.errors.correo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 76\n      }, _this) : null\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(PasswordField, _objectSpread(_objectSpread({\n      label: \"Clave:\",\n      name: \"clave\",\n      id: \"clave\",\n      s: 12,\n      m: 5,\n      l: 5\n    }, formik.getFieldProps('clave')), {}, {\n      children: formik.touched.clave && formik.errors.clave ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"helper-text red-text\",\n        children: formik.errors.clave\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 74\n      }, _this) : null\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        width: \"100%\"\n      },\n      type: \"submit\",\n      disabled: !formik.isValid,\n      children: \"Registrarse\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: \"31983275788-597slnqbnq71p45qajk27m718vqj13pq.apps.googleusercontent.com\",\n      render: function render(renderProps) {\n        return /*#__PURE__*/_jsxDEV(\"button\", {\n          className: boton,\n          onClick: renderProps.onClick,\n          disabled: renderProps.disabled,\n          children: [/*#__PURE__*/_jsxDEV(Image, {\n            alt: \"google icon\",\n            src: \"/images/google.svg\",\n            width: \"auto\",\n            height: \"20px\",\n            className: imagenGoogle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, _this), \"Registrate con Google\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, _this);\n      },\n      onSuccess: respuestaGoogle,\n      onFailure: respuestaGoogle,\n      cookiePolicy: 'single_host_origin'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(Link, {\n      className: \"already\",\n      href: \"/login\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        children: \"\\xBFYa tienes una cuenta? Ingresa aqu\\xED.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 54\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(RegistrarUsuario, \"UCmugVPQBGLVqR6/0qLmO8Rx8eM=\", false, function () {\n  return [useToasts, useRouter, useFormik];\n});\n\n_c = RegistrarUsuario;\nexport default RegistrarUsuario;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegistrarUsuario\");","map":{"version":3,"sources":["C:/Users/Sebastian/Desktop/frontend-nextjs/src/components/forms/usuario/RegistrarUsuario.jsx"],"names":["React","Link","Image","useRouter","useFormik","Yup","GoogleLogin","Button","TextInput","useToasts","Services","PasswordField","stylesGoogle","RegistrarUsuario","boton","imagenGoogle","addToast","router","registerSchema","object","shape","nombres","string","trim","max","required","apellidos","correo","email","min","clave","matches","registerNewUser","values","newUser","data","appearance","push","error","response","status","formik","initialValues","validationSchema","onSubmit","respuestaGoogle","console","log","profileObj","googleUser","givenName","familyName","googleId","newGoogleUser","autoDismiss","history","handleSubmit","getFieldProps","touched","errors","width","isValid","renderProps","onClick","disabled"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Link from 'next/link'\r\nimport Image from 'next/image'\r\nimport { useRouter } from 'next/router'\r\nimport { useFormik } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport { Button, TextInput } from 'react-materialize';\r\nimport { useToasts } from 'react-toast-notifications';\r\nimport Services from '@services/serviciosRegistro'\r\nimport { PasswordField } from '@components/commons/inputs/password/PasswordField'\r\nimport stylesGoogle from '@styles/modules/stylesGoogle.module.css'\r\n\r\nconst RegistrarUsuario = () => {\r\n\r\n    const { boton, imagenGoogle } = stylesGoogle;\r\n    const { addToast } = useToasts();\r\n    const router = useRouter()\r\n\r\n    const registerSchema = Yup.object().shape({\r\n        nombres: Yup.string().trim()\r\n            .max(60, 'Máximo 60 caracteres')\r\n            .required('Este campo es obligatorio'),\r\n        apellidos: Yup.string().trim()\r\n            .max(60, 'Máximo 60 caracteres')\r\n            .required('Este campo es obligatorio'),\r\n        correo: Yup.string().trim()\r\n            .required('Este campo es obligatorio')\r\n            .email('Correo electronico invalido')\r\n            .min(5, 'Mínimo 5 caracteres'),\r\n        clave: Yup.string()\r\n            .required('Este campo es obligatorio')\r\n            .matches('^(?=\\\\w*\\\\d)(?=\\\\w*[A-Z])(?=\\\\w*[a-z])\\\\S{8,20}$', 'La clave debe tener al entre 8 y 20 caracteres, un dígito, una letra minúscula y una letra mayúscula.')\r\n    });\r\n\r\n    const registerNewUser = (values) => {\r\n        Services.newUser(values, ({ data }) => {\r\n            addToast('¡Usuario registrado con exito!', { appearance: 'success' });\r\n            router.push(\"notificacion/activar-cuenta\");\r\n        }, (error) => {\r\n            if (error.response) {\r\n                const { status } = error.response;\r\n                if (status === 409) {\r\n                    addToast('Cuenta actualmente existente', { appearance: 'info' });\r\n                } else if (status === 422) {\r\n                    addToast('Valida la información, por favor', { appearance: 'warning' });\r\n                } else if (status === 500) {\r\n                    addToast('oh no :(, no eres tú somos nosotros, algo a ido mal', { appearance: 'error' });\r\n                }\r\n            } else {\r\n                addToast('oh no :(, no eres tú somos nosotros, algo a ido mal', { appearance: 'error' });\r\n            }\r\n        });\r\n    }\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            nombres: '',\r\n            apellidos: '',\r\n            correo: '',\r\n            clave: '',\r\n        },\r\n        validationSchema: registerSchema,\r\n        onSubmit: registerNewUser,\r\n    });\r\n\r\n    /**\r\n     * Sing up with google\r\n     */\r\n    const respuestaGoogle = (response) => {\r\n        console.log(response.profileObj);\r\n        if (response.profileObj) {\r\n            const googleUser = {\r\n                nombres: response.profileObj.givenName,\r\n                apellidos: response.profileObj.familyName,\r\n                correo: response.profileObj.email,\r\n                googleId: response.profileObj.googleId,\r\n            };\r\n            Services.newGoogleUser(googleUser, () => {\r\n                addToast('¡Usuario registrado y verificado con exito!', { appearance: 'success', autoDismiss: true });\r\n                history.push(\"login\");\r\n            }, (error) => {\r\n                if (error.response) {\r\n                    const { status } = error.response;\r\n                    if (status === 409) {\r\n                        addToast('Cuenta actualmente existente', { appearance: 'info' });\r\n                    } else if (status === 422) {\r\n                        addToast('Valida la información, por favor', { appearance: 'warning' });\r\n                    } else if (status === 500) {\r\n                        addToast('oh no :(, no eres tú somos nosotros, algo a ido mal', { appearance: 'error' });\r\n                    }\r\n                } else {\r\n                    addToast('oh no :(, no eres tú somos nosotros, algo a ido mal', { appearance: 'error' });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={formik.handleSubmit} className='form-control'>\r\n            <h2 className=\"center\"><strong>Crear</strong> una cuenta.</h2>\r\n            <TextInput label='Nombres:' name=\"nombres\" id='nombres'\r\n                {...formik.getFieldProps('nombres')}\r\n                children={formik.touched.nombres && formik.errors.nombres ? (<span className=\"helper-text red-text\">{formik.errors.nombres}</span>) : null}\r\n            />\r\n            <TextInput label='Apellidos:' name=\"apellidos\" id='apellidos'\r\n                {...formik.getFieldProps('apellidos')}\r\n                children={formik.touched.apellidos && formik.errors.apellidos ? (<span className=\"helper-text red-text\">{formik.errors.apellidos}</span>) : null}\r\n            />\r\n            <TextInput label='Correo:' email name=\"correo\" id='correo'\r\n                {...formik.getFieldProps('correo')}\r\n                children={formik.touched.correo && formik.errors.correo ? (<span className=\"helper-text red-text\">{formik.errors.correo}</span>) : null}\r\n            />\r\n            <PasswordField label='Clave:' name='clave' id='clave' s={12} m={5} l={5}\r\n                {...formik.getFieldProps('clave')}\r\n                children={formik.touched.clave && formik.errors.clave ? (<span className=\"helper-text red-text\">{formik.errors.clave}</span>) : null}\r\n            />\r\n            <Button style={{ width: \"100%\" }} type='submit' disabled={!formik.isValid} >\r\n                Registrarse\r\n                </Button>\r\n            <GoogleLogin\r\n                clientId=\"31983275788-597slnqbnq71p45qajk27m718vqj13pq.apps.googleusercontent.com\"\r\n                render={renderProps => (\r\n                    <button className={boton} onClick={renderProps.onClick} disabled={renderProps.disabled}>\r\n                        <Image\r\n                            alt=\"google icon\"\r\n                            src='/images/google.svg'\r\n                            width=\"auto\"\r\n                            height=\"20px\"\r\n                            className={imagenGoogle}\r\n                        />\r\n                        Registrate con Google</button>\r\n                )}\r\n                onSuccess={respuestaGoogle}\r\n                onFailure={respuestaGoogle}\r\n                cookiePolicy={'single_host_origin'}\r\n            />\r\n            <br></br>\r\n            <br></br>\r\n            <Link className=\"already\" href='/login' ><a>¿Ya tienes una cuenta? Ingresa aquí.</a></Link>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default RegistrarUsuario"]},"metadata":{},"sourceType":"module"}